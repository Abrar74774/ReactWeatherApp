{"version":3,"sources":["components/Header.js","components/LinkAfterValidation.js","components/Search.js","components/weather/Temp.js","components/weather/Details.js","components/weather/WeeklyForecast.js","components/weather/WeatherContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","findBtn","textDecoration","display","height","width","padding","textAlign","margin","color","borderRadius","border","transition","findBtnNoData","LinkAfterValidation","this","props","inputfield","city","x","y","console","log","style","to","onClick","dataFromSearch","coords","search","Component","Search","state","values","suggs","handleChange","e","inputValue","target","value","fetch","then","res","json","data","setState","prevState","suggestions","handleClick","searchValue","text","key","magicKey","prevstate","candidates","location","handleChangeX","handleChangeY","type","list","id","onChange","flexDirection","React","Temp","currentTemp","maxTemp","minTemp","summary","Details","Math","floor","wind","humidity","uvindex","WeeklyForecast","epochToDay","time","Date","getDay","firstNextDay","max","min","day","secondNextDay","thirdNextDay","fourthNextDay","fifthNextDay","WeatherContainer","cityName","prevProps","weatherData","daily","textTransform","currently","temperature","temperatureHigh","temperatureLow","windSpeed","uvIndex","App","setStateFunc","object","fetchedData","setTimeout","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c072565d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header-style\">\r\n            <h1 className=\"header\">Weather App</h1>\r\n        </div>        \r\n    )\r\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst findBtn = {\n    textDecoration:'none',   \n    display:'block',\n    height:'50px',\n    width:'200px',\n    padding:'7px',\n    textAlign: 'center',\n    margin:'80px auto',\n    color:'white',\n    borderRadius:'5px',\n    border:'1px solid #fff',\n    transition:'background-color 0.3s'\n}\n\nconst findBtnNoData ={\n    ...findBtn,\n    border:'1px solid #ffffff33',\n    color:'#ffffff33'\n}\n\nexport default class LinkAfterValidation extends Component {\n    render() {\n        if ((this.props.inputfield.city === '') || (this.props.inputfield.x === '') || (this.props.inputfield.y === '')) {\n            console.log('Ha');\n            return (\n                <div style={findBtnNoData}>\n                   Find \n                </div>\n            )\n        } else {\n            console.log('na');\n            console.log(this.props.inputfield.city);\n            return (\n                <Link to='/weather' \n                className=\"findBtn\" \n                style={findBtn} \n                onClick={() => {\n                    this.props.dataFromSearch({\n                        coords:{\n                            x:this.props.search.x,\n                            y:this.props.search.y},\n                        city:this.props.search.city\n                    })\n                }}\n                >\n                Find\n                </Link>\n            )\n        }\n        \n    }\n}\n","import React from 'react';\r\nimport LinkAfterValidation from './LinkAfterValidation'\r\n\r\n\r\nexport default class Search extends React.Component {\r\n    state = {\r\n        values: {\r\n            city:'',\r\n            x:'',\r\n            y:''\r\n        },\r\n        suggs:''       \r\n    }    \r\n    \r\n    //Search Recommendation\r\n    handleChange = (e) => {\r\n        const inputValue = e.target.value;    \r\n        fetch(`http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/suggest?text=${inputValue}&f=json&category=City`)\r\n            .then(res => res.json())\r\n            .then(data => { \r\n                this.setState(prevState => ({\r\n                    values: {\r\n                        ...prevState.values,\r\n                        city:inputValue\r\n                    },                    \r\n                    suggs:data.suggestions\r\n                }))\r\n            })\r\n    }\r\n\r\n    handleClick = () => {\r\n        if (this.state.suggs[0]) {\r\n            const searchValue = this.state.suggs[0].text;\r\n        const key = this.state.suggs[0].magicKey;\r\n        fetch(`http://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/findAddressCandidates?f=json&SingleLine=${searchValue}&magicKey=${key}`)\r\n            .then(res => res.json())\r\n            .then(data => this.setState(prevstate => ({\r\n                values: {\r\n                    ...prevstate.values,\r\n                    x:data.candidates[0].location.x,\r\n                    y:data.candidates[0].location.y\r\n                }\r\n            })));\r\n        }\r\n        \r\n    }\r\n    \r\n    handleChangeX = (e) => {\r\n        const x = e.target.value;\r\n        this.setState({\r\n            values:{\r\n                ...this.state.values,                \r\n                x:x\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeY = (e) => {\r\n        const y = e.target.value;\r\n        this.setState({\r\n            values:{\r\n                ...this.state.values,                \r\n                y:y\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n       \r\n        console.log(this.state);        \r\n        \r\n        return(\r\n            <div className=\"searchStyle\">\r\n                Enter city name&nbsp;:<br/>\r\n                <input type='text' list=\"search\" id=\"input\" onChange={this.handleChange}/>\r\n\r\n                <datalist id=\"search\"></datalist>\r\n\r\n                <button className=\"searchButton\" onClick={this.handleClick}>Set Coords</button>\r\n\r\n                <div style={{width:'280px',margin:'50px auto',display:'flex',flexDirection:'column',padding:'10px;',textAlign:'justify'}}>\r\n                    <div>\r\n                        Enter&nbsp;longitude&nbsp;:<input type=\"number\" value={this.state.values.x} onChange={this.handleChangeX}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        Enter&nbsp;latitude&nbsp;:<input type=\"number\" value={this.state.values.y} onChange={this.handleChangeY} />\r\n                    </div><br/>\r\n                </div>\r\n              \r\n                <LinkAfterValidation inputfield={this.state.values} search={this.state.values} dataFromSearch={this.props.dataFromSearch}/> \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default class Temp extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"tempStyle\">\r\n                <div className=\"temp\">{this.props.currentTemp}&deg;c</div>\r\n                <div className=\"others\">{this.props.maxTemp}&deg; / {this.props.minTemp}&deg;</div>\r\n                <div className=\"others\">{this.props.summary}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Details extends Component {\r\n    render() {\r\n        return (\r\n            <div className='details'>\r\n                <div>\r\n                    <i className='fa fa-wind'></i><br/>\r\n                    {Math.floor(this.props.wind) + ' km/h'}\r\n                </div>\r\n                <div>\r\n                    <i className='fa fa-tint'></i><br/>\r\n                    {this.props.humidity}\r\n                </div>\r\n                <div>\r\n                    <i className='fa fa-sun'></i><br/>\r\n                    {this.props.uvindex}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WeeklyForecast extends Component {\r\n    \r\n\r\n    epochToDay = (time) => {\r\n        const date = new Date(time * 1000);\r\n        const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\r\n\r\n        const index = date.getDay();\r\n        return days[index];\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className='details'>\r\n                <div>\r\n                    <i className='fas fa-sun'></i><br/>\r\n                    <span>{Math.floor(this.props.firstNextDay.max)}&deg;/{Math.floor(this.props.firstNextDay.min)}&deg;</span><br/>\r\n                    <span>{this.epochToDay(this.props.firstNextDay.day)}</span>\r\n                </div>\r\n                <div>\r\n                    <i className='fas fa-sun'></i><br/>\r\n                    <span>{Math.floor(this.props.secondNextDay.max)}&deg;/{Math.floor(this.props.secondNextDay.min)}&deg;</span><br/>\r\n                    <span>{this.epochToDay(this.props.secondNextDay.day)}</span>\r\n                </div>\r\n                <div>\r\n                    <i className='fas fa-sun'></i><br/>\r\n                    <span>{Math.floor(this.props.thirdNextDay.max)}&deg;/{Math.floor(this.props.thirdNextDay.min)}&deg;</span><br/>\r\n                    <span>{this.epochToDay(this.props.thirdNextDay.day)}</span>\r\n                </div>\r\n                <div>\r\n                    <i className='fas fa-sun'></i><br/>\r\n                    <span>{Math.floor(this.props.fourthNextDay.max)}&deg;/{Math.floor(this.props.fourthNextDay.min)}&deg;</span><br/>\r\n                    <span>{this.epochToDay(this.props.fourthNextDay.day)}</span>\r\n                    </div>\r\n                <div>\r\n                    <i className='fas fa-sun'></i><br/>\r\n                    <span>{Math.floor(this.props.fifthNextDay.max)}&deg;/{Math.floor(this.props.fifthNextDay.min)}&deg;</span><br/>\r\n                    <span>{this.epochToDay(this.props.fifthNextDay.day)}</span>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Temp from './Temp'\r\nimport Details from './Details'\r\nimport WeeklyForecast from './WeeklyForecast'\r\n\r\nexport default class WeatherContainer extends Component {\r\n    state = {\r\n        data:null,\r\n        cityName:''\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.weatherData !== this.props.weatherData ) {\r\n            this.setState({data:this.props.weatherData,city:this.props.cityName})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.data !== null) {\r\n            console.log(this.state.city);\r\n            const { data } = this.state.data.daily;\r\n            return (\r\n                <div>\r\n                    <h2 style={{margin:'20px auto 0',textAlign:'center',textTransform:'capitalize'}}>{this.props.cityName}</h2>\r\n                    \r\n                    <Temp                    \r\n                        currentTemp={Math.floor(this.state.data.currently.temperature)} \r\n                        maxTemp={Math.floor(this.state.data.daily.data[0].temperatureHigh)} \r\n                        minTemp={Math.floor(this.state.data.daily.data[0].temperatureLow)} \r\n                        summary={this.state.data.currently.summary} \r\n                    />        \r\n                    <Details\r\n                        wind= {this.state.data.currently.windSpeed} \r\n                        humidity={Math.floor(this.state.data.currently.humidity * 100) + '%'}\r\n                        uvindex={this.state.data.currently.uvIndex}\r\n                    />\r\n                    <WeeklyForecast \r\n                        firstNextDay={{\r\n                            day:this.state.data.daily.data[1].time,\r\n                            max:data[1].temperatureHigh,\r\n                            min:data[1].temperatureLow\r\n                        }} \r\n                        secondNextDay={{\r\n                            day:this.state.data.daily.data[2].time,\r\n                            max:data[2].temperatureHigh,\r\n                            min:data[2].temperatureLow\r\n                        }} \r\n                        thirdNextDay={{\r\n                            day:this.state.data.daily.data[3].time,\r\n                            max:data[3].temperatureHigh,\r\n                            min:data[3].temperatureLow\r\n                        }} \r\n                        fourthNextDay={{\r\n                            day:this.state.data.daily.data[4].time,\r\n                            max:data[4].temperatureHigh,\r\n                            min:data[4].temperatureLow\r\n                        }} \r\n                        fifthNextDay={{\r\n                            day:this.state.data.daily.data[5].time,\r\n                            max:data[5].temperatureHigh,\r\n                            min:data[5].temperatureLow\r\n                        }}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Search from './components/Search';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport WeatherContainer from './components/weather/WeatherContainer';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetchedData: null,\n      city:''\n    };\n  }\n\n  setStateFunc = (object) => {\n    fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/daa05a8769cd76b841d05acdc43f09cf/${object.coords.y},${object.coords.x}?units=ca`)\n     .then(res => res.json())\n     .then(data => this.setState({fetchedData:data,city:object.city}));\n    setTimeout(() => {\n      console.log(this.state);\n    }, 2000);\n  }\n\n   \n  render() {\n    console.log(this.state)\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header />\n          <Route exact path='/' render={props =>\n            <Search {...props} dataFromSearch={this.setStateFunc}/>\n          }/>\n          <Route path=\"/weather\" render={props =>(\n            <WeatherContainer {...props} weatherData={this.state.fetchedData} cityName={this.state.city}/>\n          )} />\n          \n        </div>\n      </BrowserRouter>     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}